buildscript {

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

        maven { url 'https://files.minecraftforge.net/maven' }
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://repo.spongepowered.org/maven' }
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '2.1-SNAPSHOT'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.6-SNAPSHOT'
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

sourceSets {
    main.java.srcDirs += 'src/main/java'
    main.java.srcDirs += '../shared/main/java'
    main.resources.srcDirs += '../shared/main/resources'
}

version = "1.13.5"
group= "com.palight.playerinfo" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "playerinfo"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = true // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.spongepowered.org/maven/' }
}

dependencies {

    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    compile 'com.jagrosh:DiscordIPC:0.3'

    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    compile fileTree(include: ['*.jar'], dir: 'libs')
}

test {
    useJUnitPlatform()
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

mixin {
    add sourceSets.main, 'mixin.playerinfo.refmap.json'
}

jar {

    manifest.attributes(
            'MixinConfigs': 'mixins.playerinfo.json',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,
            'FMLCorePluginContainsFMLMod': 'com.palight.playerinfo.launch.ModLoadingPlugin',
            'Manifest-Version': 1.0,
            'Main-Class': 'com.palight.playerinfo.PlayerInfo'
//            'ForceLoadAsMod': true
    )
}


shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('com.jagrosh:DiscordIPC'))
        include(dependency('org.json:json'))
        include(dependency('org.slf4j:slf4j-api'))
        include(dependency('log4j:log4j:1.2.17'))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'

    classifier = ''
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}
tasks.reobfShadowJar.mustRunAfter shadowJar

configurations {
    external
    compile.extendsFrom external
}

build.dependsOn shadowJar