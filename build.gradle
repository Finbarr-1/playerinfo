
// For those who want the bleeding edge
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

version = "1.13.5"
group= "com.palight.playerinfo" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "playerinfo"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = true // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
}

//mixin {
//    defaultObfuscationEnv notch
//    add sourceSets.main, "mixin.playerinfo.refmap.json"
//}

repositories {
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    mavenCentral()
    jcenter()
}

task fatJar(type: Jar) {
    manifest {
        attributes(
//                "MixinConfigs": 'mixins.playerinfo.json',
//                "TweakClass": 'com.palight.playerinfo.launch.ModTweaker',
                "TweakOrder": 0,
                "Manifest-Version": 1.0
        )
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'

    baseName = archivesBaseName

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}